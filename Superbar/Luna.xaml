<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Everythingbar"
                    xmlns:win="clr-namespace:Start9.UI.Wpf.Windows;assembly=Start9.UI.Wpf"
                    xmlns:window="clr-namespace:WindowsSharp.Processes;assembly=WindowsSharp"
                    xmlns:disk="clr-namespace:WindowsSharp.DiskItems;assembly=WindowsSharp"
                    xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters;assembly=Start9.UI.Wpf"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
    <ResourceDictionary.MergedDictionaries>
        <!--ResourceDictionary Source="/PresentationFramework.Luna;V3.0.0.0;31bf3856ad364e35;component\themes/luna.normalcolor.xaml" /-->
        <ResourceDictionary Source="pack://application:,,,/Start9.UI.Wpf;component/Themes/Luna.NormalColor.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region Resources-->

    <CircleEase x:Key="ThumbnailsWindowMovementEase" EasingMode="EaseOut"/>

    <!--#endregion Resources-->
    
    <!--#region Converters-->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <conv:IconToImageBrushConverter x:Key="IconToImageBrushConverter"/>

    <!--#endregion Converters-->


    <!--#region Window Styles-->

    <Style x:Key="TaskbarWindowStyle" TargetType="{x:Type local:MainWindow}">
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="ResizeIntervalDistance" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MainWindow}">
                    <Border Background="#FF245DDB" BorderBrush="#FF3168D5" BorderThickness="0,1,0,0">
                        <Grid x:Name="PART_DragMoveGrid" Background="#01000000">
                            <Rectangle VerticalAlignment="Top" Height="5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#004993E6"/>
                                        <GradientStop Offset="0.25" Color="#FF4993E6"/>
                                        <GradientStop Offset="1" Color="#004993E6"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle VerticalAlignment="Bottom" Height="3">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#001941A5"/>
                                        <GradientStop Offset="1" Color="#FF1941A5"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <DockPanel LastChildFill="True">
                                <ContentControl x:Name="Ql" Content="{TemplateBinding QuickLaunchArea}" DockPanel.Dock="Left"/>
                                <Grid x:Name="Tr" DockPanel.Dock="Right">
                                    <Border Background="#FF0D8DEA" BorderBrush="#FF095BC9" BorderThickness="0,1" Margin="8,-1,0,0" IsHitTestVisible="False">
                                        <Grid IsHitTestVisible="False">
                                            <Rectangle VerticalAlignment="Top" Height="5" IsHitTestVisible="False">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Offset="0" Color="#7F19B9F3"/>
                                                        <GradientStop Offset="0.25" Color="#FF19B9F3"/>
                                                        <GradientStop Offset="1" Color="#0019B9F3"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Rectangle VerticalAlignment="Bottom" Height="2" IsHitTestVisible="False">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Offset="0" Color="#001586DC"/>
                                                        <GradientStop Offset="1" Color="#FF1586DC"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Border BorderBrush="#FF0C2B50" BorderThickness="1,0,0,0" HorizontalAlignment="Left" Width="5" IsHitTestVisible="False">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <GradientStop Offset="0" Color="#FF23C5F4"/>
                                                        <GradientStop Offset="1" Color="#0023C5F4"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <ContentControl Content="{TemplateBinding TrayArea}"/>
                                </Grid>
                                <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}"/>
                            </DockPanel>
                            <Thumb x:Name="PART_ResizeThumb" Background="White" Cursor="SizeNS"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLocked" Value="True">
                            <Setter TargetName="PART_ResizeThumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="DockMode" Value="Left">
                            <Setter Property="Margin" Value="-3,-3,0,-3"/>
                            <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="DockMode" Value="Right">
                            <Setter Property="Margin" Value="0,-3,-3,-3"/>
                            <Setter TargetName="PART_ResizeThumb" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="DockMode" Value="Top">
                            <Setter Property="Margin" Value="-3,-3,-3,0"/>
                            <Setter TargetName="PART_ResizeThumb" Property="VerticalAlignment" Value="Bottom"/>
                        </Trigger>
                        <Trigger Property="DockMode" Value="Bottom">
                            <Setter TargetName="PART_ResizeThumb" Property="VerticalAlignment" Value="Top"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_ResizeThumb" Property="Height" Value="5"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_ResizeThumb" Property="Cursor" Value="SizeWE"/>
                            <Setter TargetName="Ql" Property="DockPanel.Dock" Value="Top"/>
                            <Setter TargetName="Tr" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="PART_ResizeThumb" Property="Width" Value="5"/>
                            <Setter Property="MinWidth" Value="120"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UseSmallIcons" Value="True">
                <Setter Property="ResizeIntervalDistance" Value="30"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion Window Styles-->


    <!--#region Taskband Styles-->

    <Style x:Key="TaskBandScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="#01000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <DockPanel Background="#01000000" LastChildFill="True">
                        <Grid x:Name="ScrollBarsGrid" Background="Transparent" DockPanel.Dock="Right">
                            <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <!--Grid.Column="1" Grid.Row="0"-->
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="{Binding Path=Orientation, ElementName=PART_VerticalScrollBar}" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <!--Grid.Column="{Binding Path=(Grid.Column), ElementName=PART_VerticalScrollBar}" Grid.Row="{Binding Path=(Grid.Row), ElementName=PART_VerticalScrollBar}"-->
                        </Grid>
                        <ScrollContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <!--Grid.Column="0" Grid.Row="0"-->
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                            <!--Setter TargetName="ContentPresenter" Property="Grid.Row" Value="1"/-->
                            <!--Setter TargetName="PART_VerticalScrollBar" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_VerticalScrollBar" Property="Grid.Row" Value="1"/-->
                            <Setter TargetName="PART_VerticalScrollBar" Property="Orientation" Value="Horizontal"/>
                            <Setter TargetName="ScrollBarsGrid" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Horizontal">
                            <!--Setter Property="HorizontalAlignment" Value="Left"/-->
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskBandListViewStyle" TargetType="{x:Type ListView}">
        <Style.Resources>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0,3,0,2"/>
                <Setter Property="Margin" Value="1,0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Grid Background="#01000000">
                                <Border x:Name="IdleBackground" BorderBrush="#FF306FD9" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#FF68A7F7"/>
                                            <GradientStop Offset="0.25" Color="#FF4386F2"/>
                                            <GradientStop Offset="0.875" Color="#FF3980F4"/>
                                            <GradientStop Offset="1" Color="#7F316FE8"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="1">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="#FF71A6F6"/>
                                                <GradientStop Offset="0.015625" Color="#204386F2"/>
                                                <GradientStop Offset="0.96875" Color="#203980F4"/>
                                                <GradientStop Offset="1" Color="#7F316FE8"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="HoverBackground" BorderBrush="#FF2C5FB2" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                            <GradientStop Offset="0.25" Color="#FF69AFFF"/>
                                            <GradientStop Offset="0.875" Color="#FF55A0FF"/>
                                            <GradientStop Offset="1" Color="#7F2A81FF"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="1">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                <GradientStop Offset="0.015625" Color="#2069AFFF"/>
                                                <GradientStop Offset="0.96875" Color="#2055A0FF"/>
                                                <GradientStop Offset="1" Color="#7F2A81FF"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Border x:Name="PressedBackground" Background="#FF174CBA" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                    <Border ClipToBounds="True">
                                        <Border Margin="-1" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="#FF123D94" Direction="315" BlurRadius="3" ShadowDepth="2" Opacity="1"/>
                                            </Border.Effect>
                                        </Border>
                                    </Border>
                                </Border>
                                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Hidden" />
                                    <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Visible" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Horizontal">
                        <Setter Property="Width" Value="160"/>
                        <Setter Property="MaxWidth" Value="160"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=DockMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Left">
                        <Setter Property="Padding" Value="2,0,3,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="2,0"/>
                    <!--Setter Property="Margin" Value="1,0"/-->
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid Background="#01000000">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Hidden" />
                                        <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Visible" />
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!--DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Horizontal">
                            <Setter Property="Width" Value="160"/>
                            <Setter Property="MaxWidth" Value="160"/>
                        </DataTrigger-->
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                            <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DockMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Left">
                            <Setter Property="Padding" Value="2,0,3,0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:PinnedApplication}">
                    <DataTemplate.Resources>
                        <Style x:Key="GroupTabStyle" TargetType="{x:Type Control}">
                            <Setter Property="Width" Value="5"/>
                            <Setter Property="Margin" Value="-1,0,0,0"/>
                            <Setter Property="Padding" Value="-5,2,0,2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Control}">
                                        <Grid Background="#01000000" ClipToBounds="True" Margin="0">
                                            <Border x:Name="IdleBackground" BorderBrush="#FF306FD9" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Offset="0" Color="#FF68A7F7"/>
                                                        <GradientStop Offset="0.25" Color="#FF4386F2"/>
                                                        <GradientStop Offset="0.875" Color="#FF3980F4"/>
                                                        <GradientStop Offset="1" Color="#7F316FE8"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Border CornerRadius="1">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <GradientStop Offset="0" Color="#FF71A6F6"/>
                                                            <GradientStop Offset="0.015625" Color="#204386F2"/>
                                                            <GradientStop Offset="0.96875" Color="#203980F4"/>
                                                            <GradientStop Offset="1" Color="#7F316FE8"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                            </Border>
                                            <Border x:Name="PressedBackground" Background="#FF174CBA" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                                <Border ClipToBounds="True">
                                                    <Border Margin="-1" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2">
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="#FF123D94" Direction="315" BlurRadius="3" ShadowDepth="2" Opacity="1"/>
                                                        </Border.Effect>
                                                    </Border>
                                                </Border>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsApplicationActive}" Value="True">
                                                <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                                <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataTemplate.Resources>
                    <Grid x:Name="PinnedAppRootGrid" MinWidth="60" Height="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                        <ListView x:Name="ItemsListView" DataContext="{Binding}" SelectionMode="Single" ItemsSource="{Binding OpenWindows}" SelectedItem="{Binding SelectedWindow, Mode=TwoWay, FallbackValue={x:Null}}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                            <ListView.Template>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <WrapPanel x:Name="ItemsHostWrapPanel" IsItemsHost="True" MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" HorizontalAlignment="Left" Background="#01000000" Orientation="Horizontal" Margin="0,-1,0,-3"/>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                                            <Setter TargetName="ItemsHostWrapPanel" Property="Orientation" Value="vertical"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type window:ProcessWindow}">
                                    <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                        <Canvas x:Name="IconCanvas" Width="32" Height="32" VerticalAlignment="Center" Background="{Binding Icon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='32'}" DockPanel.Dock="Left"/>
                                        <TextBlock Margin="4,0,0,0" Text="{Binding Title}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding SmallIcon}" Value="{x:Null}">
                                            <Setter TargetName="IconCanvas" Property="Background" Value="Black"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                                            <!--Setter TargetName="IconCanvas" Property="Background" Value="{Binding SmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"/-->
                                            <Setter TargetName="IconCanvas" Property="Width" Value="16"/>
                                            <Setter TargetName="IconCanvas" Property="Height" Value="16"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <DockPanel x:Name="IconDockPanel" MaxWidth="60" Margin="0" Visibility="Collapsed">
                            <DockPanel.ToolTip>
                                <ToolTip IsOpen="{Binding Path=AreThumbnailsShown, Mode=OneWayToSource, FallbackValue=True}" IsHitTestVisible="False" Opacity="0">Test</ToolTip>
                            </DockPanel.ToolTip>
                            <DockPanel.ContextMenu>
                                <ContextMenu x:Name="JumpListDummyContextMenu" IsEnabled="True" IsOpen="{Binding Path=IsJumpListOpen, Mode=OneWayToSource, FallbackValue=True}" IsHitTestVisible="False" Opacity="0">
                                    <ContextMenu.Style>
                                        <Style TargetType="{x:Type ContextMenu}">
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="Opened">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                                                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.1"/>
                                                            </BooleanAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="Closed">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                                                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.1"/>
                                                            </BooleanAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="IsOpen" Value="False"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Setter Property="IsOpen" Value="{Binding Path=IsJumpListOpen, Mode=OneWayToSource, FallbackValue=True}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.Style>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                            <Control x:Name="OuterGroupTab" Style="{DynamicResource GroupTabStyle}" Opacity="0.5" DockPanel.Dock="Right"/>
                            <Control x:Name="InnerGroupTab" Style="{DynamicResource GroupTabStyle}" Opacity="0.75" DockPanel.Dock="Right"/>
                            <Grid>
                                <ToggleButton x:Name="IconToggleButton" IsChecked="{Binding IsApplicationActive, Mode=TwoWay,FallbackValue=false}" IsThreeState="False">-
                                    <!--IsMouseOver="{Binding IsApplicationActive, Mode=OneWayToSource}"-->
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <!--Setter Property="MaxWidth" Value="60"/-->
                                            <Setter Property="Padding" Value="0,2"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Background="#01000000">
                                                            <Border x:Name="IdleBackground" BorderBrush="#FF306FD9" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <GradientStop Offset="0" Color="#FF68A7F7"/>
                                                                        <GradientStop Offset="0.25" Color="#FF4386F2"/>
                                                                        <GradientStop Offset="0.875" Color="#FF3980F4"/>
                                                                        <GradientStop Offset="1" Color="#7F316FE8"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Border CornerRadius="1">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Offset="0" Color="#FF71A6F6"/>
                                                                            <GradientStop Offset="0.015625" Color="#204386F2"/>
                                                                            <GradientStop Offset="0.96875" Color="#203980F4"/>
                                                                            <GradientStop Offset="1" Color="#7F316FE8"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                </Border>
                                                            </Border>
                                                            <Border x:Name="HoverBackground" BorderBrush="#FF2C5FB2" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                                        <GradientStop Offset="0.25" Color="#FF69AFFF"/>
                                                                        <GradientStop Offset="0.875" Color="#FF55A0FF"/>
                                                                        <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Border CornerRadius="1">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                                            <GradientStop Offset="0.015625" Color="#2069AFFF"/>
                                                                            <GradientStop Offset="0.96875" Color="#2055A0FF"/>
                                                                            <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                </Border>
                                                            </Border>
                                                            <Border x:Name="PressedBackground" Background="#FF174CBA" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                                                <Border ClipToBounds="True">
                                                                    <Border Margin="-1" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2">
                                                                        <Border.Effect>
                                                                            <DropShadowEffect Color="#FF123D94" Direction="315" BlurRadius="3" ShadowDepth="2" Opacity="1"/>
                                                                        </Border.Effect>
                                                                    </Border>
                                                                </Border>
                                                            </Border>
                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="IsChecked" Value="False"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Canvas x:Name="IconCanvas" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{Binding DiskApplication.ItemLargeIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='32'}" IsHitTestVisible="False" Visibility="{Binding Visibility, ElementName=IconToggleButton}"/>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                            <Setter TargetName="IconCanvas" Property="Background" Value="{Binding DiskApplication.ItemSmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"/>
                            <Setter TargetName="IconCanvas" Property="Width" Value="16"/>
                            <Setter TargetName="IconCanvas" Property="Height" Value="16"/>
                            <Setter TargetName="PinnedAppRootGrid" Property="MinWidth" Value="44"/>
                            <Setter TargetName="IconDockPanel" Property="MinWidth" Value="44"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=TaskbarCombineMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="Always">
                            <Setter TargetName="ItemsListView" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconDockPanel" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OpenWindows.Count}" Value="2">
                            <Setter TargetName="OuterGroupTab" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="InnerGroupTab" Property="Opacity" Value="0.625"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OpenWindows.Count}" Value="1">
                            <Setter TargetName="OuterGroupTab" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="InnerGroupTab" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OpenWindows.Count}" Value="0">
                            <Setter TargetName="OuterGroupTab" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="InnerGroupTab" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <!--DataTemplate DataType="{x:Type local:ProcessWindowSet}">
                    <Grid MinWidth="60" Height="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Margin="0,-1">
                        <ListView x:Name="ItemsListView" ItemsSource="{Binding Windows}" Visibility="Collapsed" Style="{DynamicResource InnerListViewStyle}" SelectedItem="{Binding SetActiveWindow, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}, Mode=OneWayToSource}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, FallbackValue=-1}">
                            <ListView.Template>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ControlTemplate.Resources>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Height" Value="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Padding" Value="0,3,0,2"/>
                                            <Setter Property="Margin" Value="1,0"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <Grid Background="#01000000">
                                                            <Border x:Name="IdleBackground" BorderBrush="#FF306FD9" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <GradientStop Offset="0" Color="#FF68A7F7"/>
                                                                        <GradientStop Offset="0.25" Color="#FF4386F2"/>
                                                                        <GradientStop Offset="0.875" Color="#FF3980F4"/>
                                                                        <GradientStop Offset="1" Color="#7F316FE8"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Border CornerRadius="1">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Offset="0" Color="#FF71A6F6"/>
                                                                            <GradientStop Offset="0.015625" Color="#204386F2"/>
                                                                            <GradientStop Offset="0.96875" Color="#203980F4"/>
                                                                            <GradientStop Offset="1" Color="#7F316FE8"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                </Border>
                                                            </Border>
                                                            <Border x:Name="HoverBackground" BorderBrush="#FF2C5FB2" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                        <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                                        <GradientStop Offset="0.25" Color="#FF69AFFF"/>
                                                                        <GradientStop Offset="0.875" Color="#FF55A0FF"/>
                                                                        <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Border CornerRadius="1">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                                            <GradientStop Offset="0.015625" Color="#2069AFFF"/>
                                                                            <GradientStop Offset="0.96875" Color="#2055A0FF"/>
                                                                            <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                </Border>
                                                            </Border>
                                                            <Border x:Name="PressedBackground" Background="#FF174CBA" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                                                <Border ClipToBounds="True">
                                                                    <Border Margin="-1" BorderBrush="#FF123C92" BorderThickness="1" CornerRadius="2">
                                                                        <Border.Effect>
                                                                            <DropShadowEffect Color="#FF123D94" Direction="315" BlurRadius="3" ShadowDepth="2" Opacity="1"/>
                                                                        </Border.Effect>
                                                                    </Border>
                                                                </Border>
                                                            </Border>
                                                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Hidden" />
                                                                <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Visible" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                                                <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="IsSelected" Value="False"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                                                                <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Horizontal">
                                                    <Setter Property="Width" Value="160"/>
                                                    <Setter Property="MaxWidth" Value="160"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                                                    <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DockMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Left">
                                                    <Setter Property="Padding" Value="2,0,3,0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type window:ProcessWindow}">
                                    <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Canvas x:Name="IconCanvas" Width="24" Height="24" VerticalAlignment="Center" Background="{Binding Icon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='24'}" DockPanel.Dock="Left"/>
                                        <TextBlock Margin="4,0,0,0" Text="{Binding Title}" VerticalAlignment="Center"/>
                                    </DockPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding SmallIcon}" Value="{x:Null}">
                                            <Setter TargetName="IconCanvas" Property="Background" Value="Black"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Canvas x:Name="IconCanvas" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{Binding LargeIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='24'}"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding CombineItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="False"/>
                                <Condition Binding="{Binding IsRunning}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="IconCanvas" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ItemsListView" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate-->
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <WrapPanel x:Name="ItemsHostWrapPanel" IsItemsHost="True" MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" HorizontalAlignment="Left" Background="#01000000" Orientation="Horizontal" Margin="0,-1,0,-3"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                            <Setter TargetName="ItemsHostWrapPanel" Property="Orientation" Value="vertical"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbnailsWindowStyle" TargetType="{x:Type win:CompositingWindow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="CompositionState" Value="Alpha"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:CompositingWindow}">
                    <Border BorderThickness="1,5,1,1" BorderBrush="#FF1666CE" Margin="0,0,0,4">
                        <Border BorderThickness="0,2,0,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="#FFF1EDDC"/>
                                    <GradientStop Offset="0.5" Color="#FFFF8F25"/>
                                    <GradientStop Offset="1" Color="#FFF1EDDC"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FFF1EDDC"/>
                                    <GradientStop Offset="1" Color="White"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbnailsListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type window:ProcessWindow}">
                    <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
                        <Canvas x:Name="IconCanvas" Width="16" Height="16" VerticalAlignment="Center" Background="{Binding SmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}" DockPanel.Dock="Left"/>
                        <TextBlock Margin="4,0,0,0" Text="{Binding Title}" VerticalAlignment="Center"/>
                    </DockPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding SmallIcon}" Value="{x:Null}">
                            <Setter TargetName="IconCanvas" Property="Background" Value="Black"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="#FF316AC5"/>
                    <Setter Property="MinHeight" Value="30"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid Background="{TemplateBinding Background}">
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Hidden" />
                                        <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Visible" />
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#01000000"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <StackPanel Orientation="Vertical" IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JumpListWindowStyle" TargetType="{x:Type win:CompositingWindow}">
        <Setter Property="BorderBrush" Value="#FF55A1FF"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="CompositionState" Value="Acrylic"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="HideTransitionDuration" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type win:CompositingWindow}">
                    <Border x:Name="RootBorder" Background="#FF3A83E3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <Border.RenderTransform>
                            <TranslateTransform X="0" Y="25"/>
                        </Border.RenderTransform>
                        <Grid>
                            <Rectangle Width="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Fill="#FF83B1ED"/>
                            <Border Background="White" BorderBrush="#FF2D7CE2" BorderThickness="4,0,0,0" Margin="2,0,0,0">
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsWindowVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="RenderTransform.Y" From="25" To="0" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="RenderTransform.Y" To="0" Duration="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JumpListEntryListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="#01000000"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0" Visibility="Hidden" />
                            <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0" Visibility="Visible" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF316AC5"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="JumpListBottomSegmentListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <ControlTemplate.Resources>
                        <!--Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource JumpListEntryListViewItemStyle}"/-->

                        <Style x:Key="JumpListApplicationListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource JumpListEntryListViewItemStyle}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Rectangle VerticalAlignment="Center" Width="16" Height="16" Fill="Red" Margin="0,0,12,0"/>
                                        <!--Fill="{Binding {DynamicResource JumpListApplicationIcon}, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}"/-->
                                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource JumpListApplicationNameText}"/>
                                    </StackPanel>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="JumpListPinListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource JumpListEntryListViewItemStyle}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Canvas VerticalAlignment="Center" Width="16" Height="8" Margin="0,0,12,0">
                                            <Rectangle Width="6" Height="1" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" Canvas.Top="4"/>
                                            <!--Path Data="M 0 0 L 3 2 L 8 2 L 10 1 L 10 8 L 8 7 L 3 7 L 0 9 Z" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" StrokeThickness="1" Canvas.Left="6"/-->
                                            <Path Data="M 0 0 L 3 2 L 8 2 L 10 1 L 10 8 L 8 7 L 3 7 L 0 9 Z" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" StrokeThickness="1" Canvas.Left="6" SnapsToDevicePixels="True"/>
                                            <!--Path Data="M 0 0 L 3 2 L 8 2 L 10 1 L 10 6 L 8 5 L 3 5 L 0 7 Z" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" StrokeThickness="1" Canvas.Left="6"/-->
                                        </Canvas>
                                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource JumpListPinApplicationText}"/>
                                    </StackPanel>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPinned, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:JumpListWindow}}}" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                <Rectangle VerticalAlignment="Center" Width="16" Height="8" Fill="Red" Margin="0,0,12,0"/>
                                                <TextBlock VerticalAlignment="Center" Text="{DynamicResource JumpListPinApplicationText}"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                        <Style x:Key="JumpListCloseWindowsListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource JumpListEntryListViewItemStyle}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                        <Path VerticalAlignment="Center" Data="M 0 0 L 12 12 M 12 0 L 0 12" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" StrokeThickness="1" Margin="0,0,12,0"/>
                                        <TextBlock VerticalAlignment="Center" Text="{DynamicResource JumpListCloseWindowsText}"/>
                                    </StackPanel>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <StackPanel Background="Transparent" IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="{Binding Path=ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MainWindow}}}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#01000000">
                        <Grid Margin="1,3,1,2">
                            <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <themes:ClassicBorderDecorator BorderStyle="Raised" BorderThickness="2.5"/>
                            </Grid>
                            <Grid x:Name="SelectedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Hidden">
                                <themes:ClassicBorderDecorator BorderStyle="Sunken" BorderThickness="2" Background="White"/>
                            </Grid>
                        </Grid>
                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Margin="5,0">
                            <!--ContentControl Content="{TemplateBinding Icon}" Margin="0,0,2,0" Focusable="False" IsTabStop="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/-->
                            <TextBlock Text="{TemplateBinding Content}" Margin="2,0,0,0" Focusable="False" TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SelectedBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                <Setter Property="MinWidth" Value="44"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TaskBandCycleButtonGridStyle" TargetType="{x:Type UniformGrid}">
        <Style.Resources>
            
        </Style.Resources>
        <Setter Property="Width" Value="10"/>
    </Style>

    <!--#endregion Taskband Styles-->

    
    <!--#region Start/QuickLaunch Styles-->

    <Style x:Key="StartToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,-1,4,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="98"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="#01000000">
                        <Grid><!--ClipToBounds="True"-->
                            <Grid.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Grid Background="#01000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}">
                                            <Ellipse Fill="Black" Stroke="Transparent" StrokeThickness="0" Width="10" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                            <Border Background="Black" BorderBrush="#01000000" BorderThickness="0,0,5,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                        </Grid>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.OpacityMask>
                            <Grid.Effect>
                                <DropShadowEffect Color="#FF97BFF3" BlurRadius="1" Direction="292.5" ShadowDepth="2" Opacity="1"/>
                            </Grid.Effect>
                            <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" ClipToBounds="True">
                                <Border BorderBrush="#FF358335" BorderThickness="1,1,0,0" ClipToBounds="True">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0.125" Color="#FF449D44"/>
                                            <GradientStop Offset="0.75" Color="#FF49B349"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Grid ClipToBounds="True">
                                    <Border Margin="-1,-2" BorderBrush="#FF31713D" BorderThickness="0,0,0,6" CornerRadius="0,0,3,3" ClipToBounds="True">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0" Color="Transparent"/>
                                                <GradientStop Offset="1" Color="Black"/>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                        <Border.Effect>
                                            <BlurEffect Radius="5" KernelType="Gaussian"/>
                                        </Border.Effect>
                                    </Border>
                                    <Rectangle Width="60" HorizontalAlignment="Right">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="#0031713D"/>
                                                <GradientStop Offset="1" Color="#7F31713D"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Ellipse Height="25" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ClipToBounds="True">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                <GradientStop Offset="0" Color="#FF49B349"/>
                                                <GradientStop Offset="1" Color="#0049B349"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Margin="-1,0" Width="15" HorizontalAlignment="Right" StrokeThickness="5" ClipToBounds="True">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0" Color="#4031713D"/>
                                                <GradientStop Offset="1" Color="#FF31713D"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0.375" Color="Transparent"/>
                                                <GradientStop Offset="0.5" Color="Black"/>
                                            </LinearGradientBrush>
                                        </Ellipse.OpacityMask>
                                        <Ellipse.Effect>
                                            <BlurEffect Radius="5" KernelType="Gaussian"/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Border Margin="1" BorderThickness="3,5,0,0" CornerRadius="3,3,0,0" ClipToBounds="True">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0" Color="Black"/>
                                                <GradientStop Offset="1" Color="Transparent"/>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0.875" Color="#FF96C496"/>
                                                <GradientStop Offset="1" Color="#0096C496"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Effect>
                                            <BlurEffect Radius="5" KernelType="Gaussian"/>
                                        </Border.Effect>
                                    </Border>
                                    <Ellipse Margin="1,2" Width="15" HorizontalAlignment="Right" StrokeThickness="3" ClipToBounds="True">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0" Color="#FF96C496"/>
                                                <GradientStop Offset="0.25" Color="#0096C496"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0.375" Color="Transparent"/>
                                                <GradientStop Offset="0.5" Color="Black"/>
                                            </LinearGradientBrush>
                                        </Ellipse.OpacityMask>
                                        <Ellipse.Effect>
                                            <BlurEffect Radius="3" KernelType="Gaussian"/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                </Grid>
                            </Grid>
                            <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Visibility="Hidden">
                                <!--themes:ClassicBorderDecorator BorderStyle="Sunken" BorderThickness="2"/-->
                            </Grid>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="9,0,25,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <StackPanel.Effect>
                                <DropShadowEffect Color="#FF465315" BlurRadius="4" Direction="270" ShadowDepth="1" Opacity="0.625"/>
                            </StackPanel.Effect>
                            <Rectangle Width="10" Height="16" Margin="5,0,3,0">
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas>
                                                <Path Fill="#FFFFFFFF" StrokeThickness="3" Stroke="#FFB5C3D8" StrokeLineJoin="Round">
                                                    <Path.Data>
                                                        <PathGeometry Figures="M.38571 108.65214c5.16228-85.95038 115.74251-91.10762 140.85307-8.02139-89.03993-55.68188-108.06556 79.37758 2.59638 51.83045-1.66143 38.1839-24.21286 125.18536-130.4676 144.38482 37.69596-24.67758 64.23096-51.38016 65.55835-103.04384 0 0-83.70248.80034-78.5402-85.15004z" FillRule="NonZero"/>
                                                    </Path.Data>
                                                </Path>
                                                <Path Fill="#FFFFFFFF" ClipToBounds="True">
                                                    <Path.Effect>
                                                        <DropShadowEffect Color="#FFB5C3D8" BlurRadius="5" Direction="0" ShadowDepth="5" Opacity="1"/>
                                                    </Path.Effect>
                                                    <Path.Data>
                                                        <PathGeometry Figures="M.38571 108.65214c5.16228-85.95038 115.74251-91.10762 140.85307-8.02139-89.03993-55.68188-108.06556 79.37758 2.59638 51.83045-1.66143 38.1839-24.21286 125.18536-130.4676 144.38482 37.69596-24.67758 64.23096-51.38016 65.55835-103.04384 0 0-83.70248.80034-78.5402-85.15004z" FillRule="NonZero"/>
                                                    </Path.Data>
                                                </Path>
                                                <Path Fill="Transparent" StrokeThickness="1" Stroke="#FFB5C3D8" StrokeLineJoin="Round" ClipToBounds="True">
                                                    <Path.Effect>
                                                        <DropShadowEffect Color="#FFB5C3D8" BlurRadius="5" Direction="0" ShadowDepth="5" Opacity="1"/>
                                                    </Path.Effect>
                                                    <Path.Data>
                                                        <PathGeometry Figures="M.38571 108.65214c5.16228-85.95038 115.74251-91.10762 140.85307-8.02139-89.03993-55.68188-108.06556 79.37758 2.59638 51.83045-1.66143 38.1839-24.21286 125.18536-130.4676 144.38482 37.69596-24.67758 64.23096-51.38016 65.55835-103.04384 0 0-83.70248.80034-78.5402-85.15004z" FillRule="NonZero"/>
                                                    </Path.Data>
                                                </Path>
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock Text="{TemplateBinding Content}" Margin="6,0,0,0" VerticalAlignment="Center" FontFamily="Franklin Gothic Medium Italic" FontSize="19" UseLayoutRounding="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                            <Setter Property="Height" Value="30"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTaskViewBaseToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="48"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="#01000000">
                        <Border x:Name="HoverBackground" BorderBrush="#FF2C5FB2" BorderThickness="1" CornerRadius="2" Margin="0,3,0,2" ClipToBounds="True" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                    <GradientStop Offset="0.25" Color="#FF69AFFF"/>
                                    <GradientStop Offset="0.875" Color="#FF55A0FF"/>
                                    <GradientStop Offset="1" Color="#7F2A81FF"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="1">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                        <GradientStop Offset="0.25" Color="#2069AFFF"/>
                                        <GradientStop Offset="0.875" Color="#2055A0FF"/>
                                        <GradientStop Offset="1" Color="#7F2A81FF"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                <Setter Property="Width" Value="36"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SearchTaskViewBaseToggleButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Control>
                    <Control.Style>
                        <Style TargetType="{x:Type Control}">
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Control}">
                                        <Grid x:Name="RootGrid">
                                            <Grid.Effect>
                                                <DropShadowEffect Color="Black" Direction="315" BlurRadius="3" ShadowDepth="1" Opacity="0.375"/>
                                            </Grid.Effect>
                                            <Path Data="M 0 9 L 9 0" StrokeThickness="4" HorizontalAlignment="Left" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
                                                <Path.Stroke>
                                                    <LinearGradientBrush StartPoint="0.4,0.4" EndPoint="0.6,0.6">
                                                        <GradientStop Offset="0" Color="#FFFFBE5A"/>
                                                        <GradientStop Offset="0.375" Color="#FFF69F40"/>
                                                        <GradientStop Offset="0.75" Color="#FFBE714A"/>
                                                        <GradientStop Offset="1" Color="#FF9B7A8C"/>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                            <Grid Width="14" Height="14" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Ellipse Stroke="#FF869AC4" StrokeThickness="1" Fill="#FFBBE7F6"/>
                                                <Ellipse Margin="1">
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush Center="0.25,0.25" GradientOrigin="0.25,0.25">
                                                            <GradientStop Offset="0" Color="White"/>
                                                            <GradientStop Offset="0.25" Color="Transparent"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                                <Ellipse Margin="1">
                                                    <Ellipse.Fill>
                                                        <RadialGradientBrush Center="0.75,0.75" GradientOrigin="0.75,0.75">
                                                            <GradientStop Offset="0" Color="White"/>
                                                            <GradientStop Offset="0.625" Color="#00FFFFFF"/>
                                                            <GradientStop Offset="0.875" Color="#FFA4D7FE"/>
                                                            <GradientStop Offset="1" Color="#00BBE7F6"/>
                                                        </RadialGradientBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                                                <Setter TargetName="RootGrid" Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Control.Style>
                </Control>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskViewToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SearchTaskViewBaseToggleButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Control>
                    <Control.Style>
                        <Style TargetType="{x:Type Control}">
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Control}">
                                        <Grid>
                                            <Grid.Effect>
                                                <DropShadowEffect Color="Black" Direction="315" BlurRadius="3" ShadowDepth="1" Opacity="0.375"/>
                                            </Grid.Effect>
                                            <Border Margin="6,0,0,6" BorderBrush="#FF2C7AE0" BorderThickness="1" CornerRadius="1" Background="#FF2C7AE0">
                                                <Border Margin="0,1,0,0" Background="White"/>
                                            </Border>
                                            <Border Margin="0,6,6,0" BorderBrush="#FF2C7AE0" BorderThickness="1" CornerRadius="1" Background="#FF2C7AE0">
                                                <Border Margin="0,1,0,0" Background="White"/>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                                                <Setter Property="Width" Value="16"/>
                                                <Setter Property="Height" Value="16"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Control.Style>
                </Control>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionCenterClockToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="#01000000">
                        <Grid x:Name="HoverBackground" Background="{TemplateBinding Background}" Visibility="Collapsed" Margin="0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Rectangle x:Name="ShadowRectangle" Width="2" Margin="-2,0,0,0" Opacity="0.5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="Black"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="ShineRectangle" Width="5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#FF19B9F3"/>
                                            <GradientStop Offset="1" Color="#0019B9F3"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Rectangle x:Name="RightShadowRectangle" Width="2" Opacity="0.5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="Black"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="RightShineRectangle" Width="5" Margin="0,0,-2,0">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0" Color="#FF19B9F3"/>
                                            <GradientStop Offset="1" Color="#0019B9F3"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!--Rectangle x:Name="RightShineRectangle" Width="5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                            <GradientStop Offset="0" Color="#FF19B9F3"/>
                                            <GradientStop Offset="1" Color="#0019B9F3"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="RightShadowRectangle" Width="2" Margin="0,0,-2,0" Opacity="0.5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="Black"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle-->
                            </StackPanel>
                        </Grid>
                        <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" FontWeight="Bold" FontSize="11"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#40000000"/>
                            <Setter TargetName="ShadowRectangle" Property="Opacity" Value="1"/>
                            <Setter TargetName="RightShadowRectangle" Property="Opacity" Value="1"/>
                            <Setter TargetName="ShineRectangle" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="RightShineRectangle" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="HoverBackground" Property="Margin" Value="0,0,3,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionCenterToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ActionCenterClockToggleButtonStyle}">
        <!--Setter Property="Width" Value="40"/-->
        <Setter Property="Width" Value="48"/>
        <!--Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10,0"/-->
        <Setter Property="Content">
            <Setter.Value>
                <Control>
                    <Control.Style>
                        <Style TargetType="{x:Type Control}">
                            <Setter Property="UseLayoutRounding" Value="True"/>
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Height" Value="20"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Control}">
                                        <ControlTemplate.Resources>
                                            <PathFigureCollection x:Key="BubblePathFigures">M 9 16 Q 0,8 10,0 Q 20,8 12,16 M 12 20 Z</PathFigureCollection>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid.Effect>
                                                <DropShadowEffect Color="Black" Direction="315" BlurRadius="3" ShadowDepth="1" Opacity="0.375"/>
                                            </Grid.Effect>
                                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush>
                                                        <VisualBrush.Visual>
                                                            <Path Stroke="Black" Data="M 9 16 Q 0,8 10,0 Q 20,8 12,16 L 12 20 Z"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Rectangle.OpacityMask>
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <GradientStop Offset="0" Color="White"/>
                                                        <GradientStop Offset="1" Color="#FFB9DCFE"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <!--ContentControl OpacityMask="{DynamicResource BubbleBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <Rectangle Fill="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Rectangle.Effect>
                                                        <DropShadowEffect Color="Black" Direction="180" BlurRadius="3" ShadowDepth="2" Opacity="0.375"/>
                                                    </Rectangle.Effect>
                                                    <Rectangle.Clip>
                                                        <GeometryGroup>
                                                            <RectangleGeometry Rect="-2048 -2048 4096 4096" />
                                                            <PathGeometry Figures="M 9 16 Q 0,8 10,0 Q 20,8 12,16 M 12 20 Z"/>
                                                        </GeometryGroup>
                                                    </Rectangle.Clip>
                                                </Rectangle>
                                            </ContentControl-->
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                                    <Setter Property="Width" Value="16"/>
                                    <Setter Property="Height" Value="16"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Control.Style>
                </Control>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=UseSmallIcons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
                <Setter Property="Width" Value="30"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsLocked" Value="{Binding IsLocked,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MainWindow}}}"/>
    </Style>

    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Style.Resources>
            <Style TargetType="{x:Type ListView}">
                <Style.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Width" Value="{Binding Height, RelativeSource={RelativeSource Mode=Self}}"/>
                        <!--Setter Property="Height" Value="{Binding ResizeIntervalDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}"/-->
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="0,3,0,2"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Grid Background="#01000000">
                                        <Border x:Name="HoverBackground" BorderBrush="#FF2C5FB2" BorderThickness="1" CornerRadius="2" Margin="{TemplateBinding Padding}" ClipToBounds="True" Visibility="Collapsed">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                    <GradientStop Offset="0.25" Color="#FF69AFFF"/>
                                                    <GradientStop Offset="0.875" Color="#FF55A0FF"/>
                                                    <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border CornerRadius="1">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <GradientStop Offset="0" Color="#FF8EC6FF"/>
                                                        <GradientStop Offset="0.25" Color="#2069AFFF"/>
                                                        <GradientStop Offset="0.875" Color="#2055A0FF"/>
                                                        <GradientStop Offset="1" Color="#7F2A81FF"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                        </Border>
                                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Hidden" />
                                            <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,0" Visibility="Visible" />
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=DockMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Left">
                                <Setter Property="Padding" Value="2,0,3,0"/>
                            </DataTrigger>
                            <!--DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                                <Setter Property="Height" Value="30"/>
                            </DataTrigger-->
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <WrapPanel x:Name="ItemsHostWrapPanel" IsItemsHost="True" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" VerticalAlignment="Stretch" Orientation="Horizontal" Margin="0,-1,0,-3"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type win:AppBarWindow}}}" Value="Vertical">
                                    <Setter TargetName="ItemsHostWrapPanel" Property="Orientation" Value="vertical"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type disk:DiskItem}">
                            <Rectangle Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{Binding ItemSmallIcon, Converter={StaticResource IconToImageBrushConverter}, ConverterParameter='16'}" IsHitTestVisible="False">
                                <Rectangle.ToolTip>
                                    <TextBlock Text="{Binding ItemDisplayName}"/>
                                </Rectangle.ToolTip>
                            </Rectangle>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Cursor" Value="SizeAll" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid Margin="4,0,0,0" Background="#01000000" SnapsToDevicePixels="True">
                                <Separator HorizontalAlignment="Left"/>
                                <Separator HorizontalAlignment="Right"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Border" CornerRadius="0" SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00000000" Offset="0" />
                                        <GradientStop Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Path x:Name="Arrow" Fill="Black" VerticalAlignment="Bottom" Margin="2,3" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                                    <ContentPresenter />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid>
                        <DockPanel>
                            <ToggleButton DockPanel.Dock="Right" Visibility="{TemplateBinding HasOverflowItems, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{DynamicResource ToolBarOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false" Focusable="false" PopupAnimation="Slide" IsOpen="{Binding IsOverflowOpen,  RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true" FocusVisualStyle="{x:Null}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                            </ToggleButton>
                            <Thumb x:Name="ToolBarThumb" Style="{DynamicResource ToolBarThumbStyle}" Width="10" />
                            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" />
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Start/QuickLaunch Styles-->

    
    <!--#region Tray Styles-->

    <Style x:Key="ShowTrayFlyoutButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="19"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="#01000000">
                        <Grid>
                            <Grid x:Name="IdleBackground">
                                <Ellipse StrokeThickness="1">
                                    <Ellipse.Stroke>
                                        <LinearGradientBrush StartPoint="0,0.625" EndPoint="1,0.375">
                                            <GradientStop Offset="0" Color="#C0FFFFFF"/>
                                            <GradientStop Offset="1" Color="#C00B2072"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Stroke>
                                    <Ellipse.Fill>
                                        <RadialGradientBrush Center="0,1" GradientOrigin="0,1" RadiusX="1" RadiusY="1">
                                            <GradientStop Offset="0.25" Color="#FF0671EB"/>
                                            <GradientStop Offset="1" Color="#FF90D7F9"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                            <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Visibility="Collapsed">
                            </Grid>
                            <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="Transparent" Visibility="Collapsed">
                            </Grid>
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 7 1 L 1 1 L 1 7" Stroke="White" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" RenderOptions.EdgeMode="Aliased">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-45"/>
                                </Path.RenderTransform>
                                <!--Data="M 5 0 L 0 4 L 5 8"-->
                            </Path>
                        </Grid>
                        <!--ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" FontWeight="Bold" FontSize="11" Margin="4,4,-4,3"/-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PressedBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowTrayFlyoutIcon" TargetType="Control">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <StackPanel Orientation="Vertical">
                        <Path Width="6" Height="4" Data="M 1 3 L 3 0 L 5 3 L 3 0 L 1 3 Z" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                        <Path Width="6" Height="4" Data="M 1 3 L 3 0 L 5 3 L 3 0 L 1 3 Z" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="15,0"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="ClockToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ActionCenterClockToggleButtonStyle}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Padding" Value="5,0"/>
    </Style>

    <Style x:Key="ShowDesktopButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="#01000000">
                        <StackPanel x:Name="HoverBackground" Background="{TemplateBinding Background}" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="2,0,0,0" Visibility="Collapsed">
                            <Rectangle x:Name="ShadowRectangle" Width="2" Margin="-2,0,0,0" Opacity="0.5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="1" Color="Black"/>
                                        <!--GradientStop Offset="0" Color="#001586DC"/>
                                        <GradientStop Offset="1" Color="#FF1586DC"/-->
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ShineRectangle" Width="5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="#FF19B9F3"/>
                                        <GradientStop Offset="1" Color="#0019B9F3"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </StackPanel>
                        <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" FontWeight="Bold" FontSize="11"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#40000000"/>
                            <Setter TargetName="ShadowRectangle" Property="Opacity" Value="1"/>
                            <Setter TargetName="ShineRectangle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Tray Styles-->

    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="25,2" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid ClipToBounds="True">
                            <ScrollContentPresenter HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch" Margin="0,-4" />
                        </Grid>
                        <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" Orientation="Horizontal"
                                   HorizontalAlignment="Right"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Value="{TemplateBinding HorizontalOffset}" VerticalAlignment="Stretch" Height="{TemplateBinding Height}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" Orientation="Horizontal"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Margin="-25,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Padding" Value="4,4,12,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>